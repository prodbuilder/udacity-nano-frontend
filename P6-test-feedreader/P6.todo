setup build tools (gulp)

Actions:
    ✔ Review the functionality of the application within your browser. @done (16-02-05 00:18)
    ✔ Explore the application's HTML (./index.html), CSS (./css/style.css) and JavaScript (./js/app.js) to gain an understanding of how it works. @done (16-02-05 01:02)
    ✔ Explore the Jasmine spec file in ./jasmine/spec/feedreader.js and review the Jasmine documentation. @done (16-02-05 01:02)
    ✔ Edit the allFeeds variable in ./js/app.js to make the provided test fail and see how Jasmine visualizes this failure in your application. @done (16-02-05 01:33)
    ✔ Return the allFeeds variable to a passing state. @done (16-02-05 01:33)
    ✔ Write a test that loops through each feed in the allFeeds object and ensures it has a URL defined and that the URL is not empty. @done (16-02-05 01:32)
    ✔ Write a test that loops through each feed in the allFeeds object and ensures it has a name defined and that the name is not empty. @done (16-02-05 01:32)
    ✔ Write a new test suite named "The menu". @done (16-02-05 01:32)
    ☐ Write a test that ensures the menu element is hidden by default. You'll have to analyze the HTML and the CSS to determine how we're performing the hiding/showing of the menu element.
    ☐ Write a test that ensures the menu changes visibility when the menu icon is clicked. This test should have two expectations: does the menu display when clicked and does it hide when clicked again.
    ☐ Write a test suite named "Initial Entries".
    ☐ Write a test that ensures when the loadFeed function is called and completes its work, there is at least a single .entry element within the .feed container.
    ☐ Write a test suite named "New Feed Selection".
    ☐ Write a test that ensures when a new feed is loaded by the loadFeed function that the content actually changes.
    ✔ When complete - all of your tests should pass. @done (16-02-05 01:34)

Submission:
    ☐ If build tools are used, submit both your source and production code in the same repository in separate directories. These directories are usually named src and dist respectively.
    ☐ If build tools are used the gulp or grunt.js file as well as the package.json file must be included in the submission.
    ☐ Add build tool usage info in readme
